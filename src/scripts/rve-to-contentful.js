// src/scripts/invoiceGenerator.js
import PDFDocument from "pdfkit";
import fs from "fs";
import path from "path";

export function generateInvoicePDF(point, outputDir = "./invoices") {
  if (!fs.existsSync(outputDir)) {
    fs.mkdirSync(outputDir, { recursive: true });
  }

  const filename = path.join(outputDir, `${point.name.replace(/\s+/g, "_")}.pdf`);
  const doc = new PDFDocument({ margin: 50 });
  doc.pipe(fs.createWriteStream(filename));

  // --- HEADER ---
  doc.fontSize(20).text("Invoice", { align: "center" }).moveDown();

  doc
    .fontSize(12)
    .text(`Station: ${point.name}`)
    .text(`Location: ${point.location}`)
    .text(`UUID: ${point.uuid}`)
    .moveDown();

  // --- TOTALS ---
  doc.fontSize(14).text("Summary", { underline: true }).moveDown(0.5);

  doc
    .fontSize(12)
    .text(`Reads Consumption (kWh): ${point.consumption.toFixed(1)}`)
    .text(`CDR Consumption (kWh): ${point.cdrConsumption.toFixed(1)}`)
    .moveDown();

  // --- GROUP CDRs BY DATE ---
  const grouped = {};
  for (const session of point.cdrSessions) {
    if (!grouped[session.date]) grouped[session.date] = [];
    grouped[session.date].push(session);
  }

  // --- TABLE ---
  doc.fontSize(14).text("CDR Sessions", { underline: true }).moveDown(0.5);

  const tableTop = doc.y;
  const rowHeight = 20;
  const colWidths = [100, 150, 150, 100];

  let y = tableTop;

  for (const [date, sessions] of Object.entries(grouped)) {
    const dayTotal = sessions.reduce((sum, s) => sum + s.energy, 0);

    // --- Day Header ---
    doc.fontSize(12).text(`Date: ${date}`, 50, y);
    y += rowHeight;

    // --- Column Headers ---
    doc.fontSize(10)
      .text("Start Time", 100, y)
      .text("End Time", 250, y)
      .text("Energy (kWh)", 400, y);
    y += rowHeight;
    doc.moveTo(50, y - 5).lineTo(550, y - 5).stroke();

    // --- Sessions Rows ---
    for (const session of sessions) {
      doc.fontSize(10)
        .text(session.startTime, 100, y)
        .text(session.endTime, 250, y)
        .text(session.energy.toFixed(1), 400, y);
      y += rowHeight;

      // Page break check
      if (y > doc.page.height - 50) {
        doc.addPage();
        y = 50;
      }
    }

    // --- Subtotal per day ---
    doc.fontSize(10).text(`Subtotal: ${dayTotal.toFixed(1)} kWh`, 400, y, { bold: true });
    y += rowHeight * 2;

    // Page break check again
    if (y > doc.page.height - 50) {
      doc.addPage();
      y = 50;
    }
  }

  // --- FOOTER ---
  doc.moveDown(2);
  doc.fontSize(10).text("Generated by CloudOceanService", { align: "center" });

  doc.end();
  console.log(`âœ… Invoice saved: ${filename}`);
}
